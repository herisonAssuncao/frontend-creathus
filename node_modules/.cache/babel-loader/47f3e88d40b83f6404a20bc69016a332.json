{"remainingRequest":"/home/herison/projetos/vue_crud_bootstrap/node_modules/babel-loader/lib/index.js!/home/herison/projetos/vue_crud_bootstrap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/herison/projetos/vue_crud_bootstrap/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/herison/projetos/vue_crud_bootstrap/src/views/CallRestApi.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/herison/projetos/vue_crud_bootstrap/src/views/CallRestApi.vue","mtime":1615383730121},{"path":"/home/herison/projetos/vue_crud_bootstrap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/herison/projetos/vue_crud_bootstrap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/herison/projetos/vue_crud_bootstrap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/herison/projetos/vue_crud_bootstrap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZW1wbG95ZWVTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZS9lbXBsb3llZXNlcnZpY2UnOwppbXBvcnQgTG9hZGluZyBmcm9tICd2dWUtbG9hZGluZy1vdmVybGF5JzsKaW1wb3J0ICd2dWUtbG9hZGluZy1vdmVybGF5L2Rpc3QvdnVlLWxvYWRpbmcuY3NzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdjYWxsX3Jlc3RfYXBpJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGlzdEVtcGxveWVlOiBbXSwKICAgICAgaXNMb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIExvYWRpbmc6IExvYWRpbmcKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmxvYWRFbXBsb3llZXMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWRFbXBsb3llZXM6IGZ1bmN0aW9uIGxvYWRFbXBsb3llZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGVtcGxveWVlU2VydmljZS5nZXRMaXN0RW1wbG95ZWVzKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5saXN0RW1wbG95ZWUgPSByZXNwb25zZS5kYXRhOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfSwgNTAwKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["CallRestApi.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,eAAA,QAAA,4BAAA;AACA,OAAA,OAAA,MAAA,qBAAA;AACA,OAAA,0CAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GARA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,aAAA;AACA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,WAAA,SAAA,GAAA,IAAA;AACA,MAAA,eAAA,CAAA,gBAAA,GAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,SAFA,EAEA,GAFA,CAAA;AAGA,OALA;AAMA;AATA;AAdA,CAAA","sourcesContent":["<template>\n  <div class=\"home\">\n    <h3>Call REST API</h3>\n    <div>\n      <table class=\"table table-bordered\">\n        <tr>\n          <td>Employee ID</td>\n          <td>Employee Name</td>\n          <td>Age</td>\n          <td>Salary</td>\n        </tr>\n        <tr :key=\"employee.id\" v-for=\"employee in listEmployee\">\n          <td>{{employee.id}}</td>\n          <td>{{employee.employee_name}}</td>\n          <td>{{employee.employee_age}}</td>\n          <td>{{employee.employee_salary}}</td>\n        </tr>\n      </table>\n      <loading :active.sync=\"isLoading\"\n        :can-cancel=\"true\"\n        :on-cancel=\"onCancel\"\n        :is-full-page=\"fullPage\"></loading>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { employeeService } from '../service/employeeservice'\nimport Loading from 'vue-loading-overlay'\nimport 'vue-loading-overlay/dist/vue-loading.css'\n\nexport default {\n  name: 'call_rest_api',\n  data () {\n    return {\n      listEmployee: [],\n      isLoading: false\n    }\n  },\n  components: {\n    Loading\n  },\n  created () {\n    this.loadEmployees()\n  },\n  methods: {\n    loadEmployees () {\n      this.isLoading = true\n      employeeService.getListEmployees().then((response) => {\n        this.listEmployee = response.data\n        setTimeout(() => {\n          this.isLoading = false\n        }, 500)\n      })\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/views"}]}